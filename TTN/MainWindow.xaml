<Window x:Class="TTN.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TTN"
        mc:Ignorable="d"
        Title="Распознователь накладных" Height="1080" Width="1920" WindowState="Maximized">
    <Window.Resources>
        <Style x:Key="LargeCheckBox" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <Viewbox Width="30" Height="30">
                                <Grid Width="20" Height="20">
                                    <Border x:Name="Border"
                                            Background="White"
                                            BorderBrush="Black"
                                            BorderThickness="2"
                                            Width="20"
                                            Height="20"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                                    <Path x:Name="CheckMark"
                                          Data="M 0 6 L 2 8 L 8 2"
                                          Stroke="Black"
                                          StrokeThickness="2"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Visibility="Collapsed"/>
                                </Grid>
                            </Viewbox>
                            <ContentPresenter VerticalAlignment="Center"
                                              Margin="5,0,0,0"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundedButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.0" ScaleY="1.0"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="Green"
                                CornerRadius="15"
                                BorderBrush="DarkGreen"
                                BorderThickness="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Триггер для состояния нажатия -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="DarkGreen"/>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <!-- Анимация при возвращении к нормальному состоянию -->
                            <Trigger Property="IsPressed" Value="False">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                             To="1.0" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                             To="1.0" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="Gray"/>
                                <Setter Property="Foreground" Value="LightGray"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="DarkGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ImageButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                            <Image Source="/Close_red_16x.png" Stretch="Fill"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Триггер для состояния нажатия -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <!-- Анимация при возвращении к нормальному состоянию -->
                            <Trigger Property="IsPressed" Value="False">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                     To="1.0" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                     To="1.0" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ImageButtonStyle2" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                            <Image Source="/Add_inverse_16x.png" Stretch="Fill"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Триггер для состояния нажатия -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <!-- Анимация при возвращении к нормальному состоянию -->
                            <Trigger Property="IsPressed" Value="False">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                To="1.0" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                To="1.0" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ImageButtonStyle3" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                            <Image Source="/ZoomOut_16xMD.png" Stretch="Fill"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Триггер для состояния нажатия -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <!-- Анимация при возвращении к нормальному состоянию -->
                            <Trigger Property="IsPressed" Value="False">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                         To="1.0" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                         To="1.0" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ImageButtonStyle4" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                            <Image Source="/ZoomIn_16x.png" Stretch="Fill"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Триггер для состояния нажатия -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <!-- Анимация при возвращении к нормальному состоянию -->
                            <Trigger Property="IsPressed" Value="False">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                         To="1.0" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                         To="1.0" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <Grid Margin="0,0,0,-16">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="5" />
            <RowDefinition Height="100" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="650" MinWidth="325" MaxWidth="900"/>
            <ColumnDefinition Width="2" />
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2" />
            <ColumnDefinition Width="500" MinWidth="250" MaxWidth="700"/>
        </Grid.ColumnDefinitions>

        <GridSplitter Grid.Column="1" Width="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#FF1F6F20" />
        <Border Grid.Row="1" Grid.ColumnSpan="5" Background="#FF1F6F20" ></Border>
        <GridSplitter Grid.Column="3" Width="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#FF1F6F20" />

        <Menu VerticalAlignment="Top" Grid.ColumnSpan="5" Height="25" BorderBrush="#FF005D0A" Background="#FF55BF65">
            <MenuItem Header="Главная">
                <MenuItem Header="Открыть фото"  Click="OpenFileButton_Click"/>
                <MenuItem Header="Сканировать" x:Name="menuButtonScan" IsEnabled="False"/>
                <MenuItem Header="Выгрузить в Excel" IsEnabled="False"/>
            </MenuItem>
            <MenuItem Header="Справка" Height="25" Width="58" Click="MenuItem_Click">
            </MenuItem>
        </Menu>

        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Margin="0,25,0,0">
            <Image x:Name="imgBox" Margin="6,30,1,23" OpacityMask="Red" Width="600" Height="820"/>
        </ScrollViewer>

        <ProgressBar x:Name="progressBar" Grid.Row="2" Grid.ColumnSpan="5" Margin="64,29,64,46" Value="0"/>

        <Viewbox x:Name="viewbox1">
            <Label Content="Добавьте изображение накладной" 
                   FontWeight="Bold" 
                   FontSize="24" 
                   FontFamily="Segoe UI Variable Display Semibold"
                   HorizontalContentAlignment="Center" 
                   VerticalContentAlignment="Center" Width="546"
                   MouseDoubleClick="Label_MouseDoubleClick"    />
        </Viewbox>
        <Button Visibility="Hidden" x:Name="buttonZoom" BorderBrush="{x:Null}" HorizontalAlignment="Right" Width="50" Height="50" VerticalAlignment="Bottom" Style="{StaticResource ImageButtonStyle4}" Click="ZoomPanel" Margin="0,0,50,0">
            <Button.Background>
                <ImageBrush ImageSource="/ZoomIn_16x.png"/>
            </Button.Background>
        </Button>
        <Button Visibility="Hidden" x:Name="buttonZoom2" BorderBrush="{x:Null}" HorizontalAlignment="Right" Width="50" Height="50" VerticalAlignment="Bottom" Style="{StaticResource ImageButtonStyle3}" Click="ZoomMPanel" RenderTransformOrigin="0.54,0.53">
            <Button.Background>
                <ImageBrush ImageSource="/ZoomOut_16x.png"/>
            </Button.Background>
        </Button>

        <Grid Grid.Column="2" Margin="0,25,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" MinHeight="250" MaxHeight="600"/>
                <RowDefinition Height="2" />
                <RowDefinition Height="*" MinHeight="250" MaxHeight="600"/>
            </Grid.RowDefinitions>

            <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" Background="#FF1F6F20" />

            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <StackPanel Grid.Row="0" Margin="0,0,0,2" x:Name="MainStackPanel" Orientation="Vertical">

                </StackPanel>
            </ScrollViewer>

            <Grid Height="120" x:Name="dataPrefab" Visibility="Hidden">
                <Border x:Name="dataPrefabBorder" CornerRadius="15" BorderThickness="1" BorderBrush="Black" Background="#FFBCF5A8" RenderTransformOrigin="0.5,0.5" Margin="44,0,44,0" Height="104" VerticalAlignment="Center">
                    <Grid x:Name="dataPrefabGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="31*"/>
                            <RowDefinition Height="71*"/>
                        </Grid.RowDefinitions>
                        <TextBox Margin="21,25,21,17" TextWrapping="Wrap" Text="TextBox" Grid.Row="1"/>
                        <ComboBox x:Name="comboBoxDataTypes" Margin="22,16,0,57" Grid.RowSpan="2" HorizontalAlignment="Left" Width="317" SelectionChanged="comboBoxDataTypes_SelectionChanged"/>
                        <Button Margin="0,0,22,57" BorderBrush="{x:Null}" HorizontalAlignment="Right" Width="29" Height="29" VerticalAlignment="Bottom" Grid.RowSpan="2" Style="{StaticResource ImageButtonStyle}" Click="DeleteButton_Click">
                            <Button.Background>
                                <ImageBrush x:Name="brush" ImageSource="/Close_red_16x.png"/>
                            </Button.Background>
                        </Button>
                        <Button x:Name="buttonTable" Click="buttonTable_Click"  Content="Просмотреть таблицу" Visibility="Hidden" Margin="21,25,0,0" Grid.Row="1" Height="29" VerticalAlignment="Top" HorizontalAlignment="Left" Width="317"/>
                    </Grid>
                </Border>
            </Grid>

            

            <Button BorderBrush="{x:Null}" HorizontalAlignment="Right" Width="50" Height="50" VerticalAlignment="Bottom" Style="{StaticResource ImageButtonStyle2}" Click="AddDataPanel">
                <Button.Background>
                    <ImageBrush ImageSource="/Add_inverse_16x.png"/>
                </Button.Background>
            </Button>

            <StackPanel Grid.Row="2">
                <CheckBox x:Name="cb1"
                    Content="Шапка (УНП + дата)" 
                    FontSize="20"
                    Style="{StaticResource LargeCheckBox}" Width="624" Height="58" RenderTransformOrigin="0.5,0.5" IsChecked="False"/>
                <CheckBox x:Name="cb2"
                    Content="Информация об автомобиле" 
                    FontSize="20"
                    Style="{StaticResource LargeCheckBox}" Width="624" Height="58" RenderTransformOrigin="0.5,0.5" IsChecked="False"/>
                <CheckBox x:Name="cb3"
                    Content="Грузоотправитель и основания отпуска" 
                    FontSize="20"
                    Style="{StaticResource LargeCheckBox}" Width="624" Height="58" RenderTransformOrigin="0.5,0.5" IsChecked="False"/>
                <CheckBox x:Name="cb4"
                    Content="Пункт погрузки и переадресовка" 
                    FontSize="20"
                    Style="{StaticResource LargeCheckBox}" Width="624" Height="58" RenderTransformOrigin="0.5,0.5" IsChecked="False"/>
                <CheckBox x:Name="cb5"
                    Content="#Товарный раздел" 
                    FontSize="20"
                    Style="{StaticResource LargeCheckBox}" Width="624" Height="58" RenderTransformOrigin="0.5,0.5" IsChecked="False"/>
                <CheckBox x:Name="cb6"
                    Content="Стоимость и стороны" 
                    FontSize="20"
                    Style="{StaticResource LargeCheckBox}" Width="624" Height="58" RenderTransformOrigin="0.5,0.5" IsChecked="False"/>
                <CheckBox
                    Content="#Погрузочно-разгрузочные операции" 
                    FontSize="20"
                    Style="{StaticResource LargeCheckBox}" Width="624" Height="58" RenderTransformOrigin="0.5,0.5" IsChecked="False"/>
                <CheckBox
                    Content="#Прочие сведенья" 
                    FontSize="20"
                    Style="{StaticResource LargeCheckBox}" Width="624" Height="58" RenderTransformOrigin="0.5,0.5" IsChecked="False"/>
            </StackPanel>

        </Grid>



        <Viewbox Grid.Column="4" Margin="0,24,0,0" MaxWidth="500" MaxHeight="300">
            <Grid MaxWidth="400" MaxHeight="300">
                <CheckBox 
                     x:Name="checkFilter"
                     Content="Очистка от водяного знака" 
                     FontSize="20" 
                     Margin="21,-47,57,284"
                     Style="{StaticResource LargeCheckBox}" IsChecked="True" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked"/>
                <CheckBox 
                     x:Name="fastExcel"
                     Content="Автоматическая выгрузка в Excel" 
                     FontSize="20" 
                     Margin="21,23,20,214"
                     Style="{StaticResource LargeCheckBox}"/>
                <Button x:Name="buttonScan" Content="Сканировать" Style="{StaticResource RoundedButtonStyle}" 
                        HorizontalAlignment="Stretch" 
                        Margin="21,93,20,126" 
                        VerticalAlignment="Stretch"  IsEnabled="False"
                        Click="buttonScan_Click"/>
                <Button x:Name="buttonXML" Content="Просмотреть XML" Style="{StaticResource RoundedButtonStyle}" 
                        HorizontalAlignment="Stretch" 
                        Margin="21,181,20,38"                         
                        VerticalAlignment="Stretch" IsEnabled="False" Click="Button_Click_1"/>
                <Button Content="Перенести в Excel" Style="{StaticResource RoundedButtonStyle}" 
                        HorizontalAlignment="Stretch" 
                        Margin="21,271,20,-52" 
                        VerticalAlignment="Stretch" IsEnabled="False"
                        x:Name="buttonExcel" Click="buttonExcel_Click"/>
            </Grid>
        </Viewbox>

    </Grid>
</Window>
